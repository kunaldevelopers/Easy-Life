import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Helmet } from "react-helmet-async";
import { motion, AnimatePresence } from "framer-motion";
import {
  Users,
  TrendingUp,
  Star,
  MessageCircle,
  Plus,
  ArrowLeft,
  BarChart3,
  Eye,
  Phone,
  Calendar,
  MapPin,
  Mail,
  Clock,
  CheckCircle,
  Heart,
  ExternalLink,
  X,
  ThumbsUp,
  Camera,
  FileText,
  Package,
  AlertCircle,
  Award,
  Target,
  Activity,
  ShoppingBag,
  DollarSign,
} from "lucide-react";
import { useAuth } from "../context/AuthContext";
import Card from "../components/common/Card";
import Button from "../components/common/Button";

const CustomerPanel = () => {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [selectedActivity, setSelectedActivity] = useState(null);
  const [isActivityModalOpen, setIsActivityModalOpen] = useState(false);

  // Handle activity-specific actions
  const handleActivityAction = (activity) => {
    setSelectedActivity(activity);
    setIsActivityModalOpen(true);
  };

  const closeActivityModal = () => {
    setIsActivityModalOpen(false);
    setTimeout(() => setSelectedActivity(null), 300); // Delay to allow animation
  };

  // Enhanced demo data for different activity types
  const getDetailedActivityData = (activity) => {
    switch (activity.type) {
      case "review":
        return {
          title: "Review Submitted",
          businessName: "Taste of Tibet Restaurant",
          businessImage: "/api/placeholder/300/200",
          details: {
            rating: activity.rating || 5,
            date: activity.date,
            orderValue: "₹1,250",
            orderItems: [
              "Chicken Momos (2 plates)",
              "Butter Chicken",
              "Garlic Naan",
              "Masala Tea",
            ],
            reviewText:
              "Absolutely amazing food! The momos were perfectly steamed and the butter chicken was rich and flavorful. Great service and authentic taste. Will definitely order again!",
            helpful: 12,
            businessResponse:
              "Thank you so much for your wonderful review! We're delighted that you enjoyed our authentic flavors. Looking forward to serving you again soon! 🙏",
          },
        };
      case "save":
        return {
          title: "Business Saved",
          businessName: "Green Valley Photographers",
          businessImage: "/api/placeholder/300/200",
          details: {
            savedDate: activity.date,
            category: "Photography",
            rating: 4.8,
            totalReviews: 156,
            priceRange: "₹15,000 - ₹50,000",
            specialties: [
              "Wedding Photography",
              "Portrait Sessions",
              "Event Coverage",
            ],
            nextAvailable: "Dec 15, 2024",
            portfolio: [
              "Wedding shoot at Rumtek",
              "Corporate event coverage",
              "Family portraits",
            ],
            whySaved:
              "Highly rated photographer with excellent wedding portfolio",
          },
        };
      case "inquiry":
        return {
          title: "Inquiry Sent",
          businessName: "Expert Electronics Repair",
          businessImage: "/api/placeholder/300/200",
          details: {
            inquiryDate: activity.date,
            subject: "AC Repair Service",
            message:
              "Hi, my AC is not cooling properly and making strange noises. Can you check and provide a quote for repair? It's a 1.5 ton split AC, about 3 years old.",
            status: activity.status,
            businessResponse:
              activity.status === "responded"
                ? "Thank you for contacting us! Our technician can visit tomorrow between 2-4 PM. Estimated cost for diagnosis is ₹300. Please confirm your availability."
                : null,
            responseTime: activity.status === "responded" ? "2 hours" : null,
            technicianName: "Rajesh Kumar",
            estimatedCost: "₹300 - ₹2,500",
            serviceArea: "Gangtok, Singtam, Rangpo",
          },
        };
      case "booking":
        return {
          title: "Service Booked",
          businessName: "Happy Wheels Car Service",
          businessImage: "/api/placeholder/300/200",
          details: {
            bookingDate: activity.date,
            serviceDate: "Dec 12, 2024",
            timeSlot: "10:00 AM - 12:00 PM",
            serviceType: "Full Car Servicing",
            vehicleDetails: "Maruti Swift VDI, 2019",
            bookingId: "HW2024001",
            status: activity.status,
            totalCost: "₹3,500",
            services: [
              "Engine Oil Change",
              "Filter Replacement",
              "Brake Check",
              "Tire Rotation",
            ],
            mechanicName: "Suresh Rai",
            pickupAddress: "MG Marg, Gangtok",
            estimatedDuration: "2-3 hours",
            warranty: "30 days",
          },
        };
      case "view":
        return {
          title: "Business Viewed",
          businessName: "Mountain View Cafe",
          businessImage: "/api/placeholder/300/200",
          details: {
            viewDate: activity.date,
            viewDuration: "5 minutes",
            pagesViewed: ["Menu", "Reviews", "Photos", "Contact"],
            category: "Restaurant & Cafe",
            rating: 4.6,
            priceRange: "₹200 - ₹800",
            specialOffers: "20% off on first order",
            popularItems: ["Himalayan Coffee", "Chicken Chowmein", "Apple Pie"],
            openHours: "8:00 AM - 10:00 PM",
            location: "Tibet Road, Gangtok",
            similarBusinesses: [
              "Cafe Fiction",
              "The Coffee Shop",
              "Himalayan Java",
            ],
          },
        };
      default:
        return {
          title: "Activity Details",
          businessName: "Local Business",
          details: {},
        };
    }
  };

  const getActivityIcon = (type) => {
    switch (type) {
      case "review":
        return Star;
      case "save":
        return Heart;
      case "inquiry":
        return MessageCircle;
      case "booking":
        return Calendar;
      case "view":
        return Eye;
      default:
        return Eye;
    }
  };

  const getActivityColor = (type) => {
    switch (type) {
      case "review":
        return "text-yellow-600 bg-yellow-100";
      case "save":
        return "text-red-600 bg-red-100";
      case "inquiry":
        return "text-blue-600 bg-blue-100";
      case "booking":
        return "text-green-600 bg-green-100";
      case "view":
        return "text-purple-600 bg-purple-100";
      default:
        return "text-gray-600 bg-gray-100";
    }
  };

  const getStatusBadge = (activity) => {
    if (activity.type === "inquiry" && activity.status === "responded") {
      return (
        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
          <CheckCircle className="w-3 h-3 mr-1" />
          Responded
        </span>
      );
    }
    if (activity.type === "booking" && activity.status === "confirmed") {
      return (
        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
          <CheckCircle className="w-3 h-3 mr-1" />
          Confirmed
        </span>
      );
    }
    return null;
  };

  if (!user || user.type !== "customer") {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <Card className="p-8 text-center">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">
            Access Denied
          </h2>
          <p className="text-gray-600 mb-6">
            You need to be logged in as a customer to access this page.
          </p>
          <Button onClick={() => navigate("/auth")} variant="primary">
            Log In
          </Button>
        </Card>
      </div>
    );
  }
  const stats = [
    {
      label: "Saved Businesses",
      value: "5",
      icon: Heart,
      colorClass: "bg-red-100 text-red-600",
      change: "+2",
      period: "this month",
      clickAction: () => navigate("/profile#saved"),
    },
    {
      label: "Reviews Posted",
      value: "12",
      icon: Star,
      colorClass: "bg-yellow-100 text-yellow-600",
      change: "+3",
      period: "this month",
      clickAction: () => navigate("/profile#reviews"),
    },
    {
      label: "Inquiries Made",
      value: "8",
      icon: MessageCircle,
      colorClass: "bg-green-100 text-green-600",
      change: "+1",
      period: "this week",
      clickAction: () => navigate("/profile#inquiries"),
    },
    {
      label: "Businesses Visited",
      value: "23",
      icon: MapPin,
      colorClass: "bg-purple-100 text-purple-600",
      change: "+5",
      period: "this month",
      clickAction: () => navigate("/listings"),
    },
  ];

  const recentActivity = [
    {
      id: 1,
      action: "Reviewed",
      business: "Gangtok Electronics Repair Hub",
      date: "2 days ago",
      type: "review",
      rating: 5,
      message:
        "Excellent repair service! Fixed my laptop quickly and professionally.",
      businessId: "gangtok-electronics",
      canRespond: false,
    },
    {
      id: 2,
      action: "Saved",
      business: "Himalayan Plumbing Solutions",
      date: "1 week ago",
      type: "save",
      message: "Added to your saved businesses for future reference",
      businessId: "himalayan-plumbing",
      canRespond: false,
    },
    {
      id: 3,
      action: "Contacted",
      business: "Quick Home Delivery",
      date: "2 weeks ago",
      type: "inquiry",
      message: "Inquired about home delivery rates and service areas",
      businessId: "quick-delivery",
      canRespond: true,
      status: "responded",
    },
    {
      id: 4,
      action: "Booked",
      business: "Mountain View Restaurant",
      date: "3 weeks ago",
      type: "booking",
      message:
        "Table reservation for 4 people - Confirmed for Dec 20th, 7:00 PM",
      businessId: "mountain-view",
      canRespond: false,
      status: "confirmed",
    },
    {
      id: 5,
      action: "Viewed",
      business: "Sikkim Tours & Travels",
      date: "1 month ago",
      type: "view",
      message: "Viewed business profile and photo gallery",
      businessId: "sikkim-tours",
      canRespond: true,
      duration: "5 min 23 sec",
    },
  ];

  return (
    <>
      <Helmet>
        <title>Customer Dashboard - Easy Life Gangtok</title>
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        <div className="max-w-4xl mx-auto">
          {/* Mobile Header - Simplified */}
          <div className="bg-white border-b border-gray-200 sticky top-0 z-10">
            <div className="px-4 py-4">
              <div className="flex items-center justify-between">
                <button
                  onClick={() => navigate(-1)}
                  className="flex items-center text-gray-600 hover:text-gray-900 transition-colors"
                >
                  <ArrowLeft className="w-5 h-5 mr-2" />
                  <span className="hidden sm:inline">Back</span>
                </button>
                <div className="text-center flex-1 mx-4">
                  <h1 className="text-lg sm:text-xl font-bold text-gray-900">
                    Hi, {user.name}!
                  </h1>
                  <p className="text-xs sm:text-sm text-gray-600">
                    Your Dashboard
                  </p>
                </div>
                <div className="w-8 h-8 rounded-full bg-primary-100 flex items-center justify-center">
                  <Users className="w-4 h-4 text-primary-600" />
                </div>
              </div>
            </div>
          </div>

          {/* Mobile-First Layout */}
          <div className="p-4 space-y-6">
            {/* Quick Stats - Mobile Optimized */}
            <div className="grid grid-cols-2 gap-3 sm:gap-4">
              {stats.map((stat, index) => (
                <motion.div
                  key={stat.label}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                >
                  <Card
                    className="p-3 sm:p-4 cursor-pointer hover:shadow-lg transition-all duration-200"
                    onClick={stat.clickAction}
                  >
                    <div className="text-center space-y-2">
                      <div
                        className={`w-10 h-10 sm:w-12 sm:h-12 mx-auto rounded-lg ${
                          stat.colorClass.split(" ")[0]
                        } flex items-center justify-center`}
                      >
                        <stat.icon
                          className={`w-5 h-5 sm:w-6 sm:h-6 ${
                            stat.colorClass.split(" ")[1]
                          }`}
                        />
                      </div>
                      <div>
                        <p className="text-xl sm:text-2xl font-bold text-gray-900">
                          {stat.value}
                        </p>
                        <p className="text-xs sm:text-sm text-gray-600 leading-tight">
                          {stat.label}
                        </p>
                        <p className="text-xs text-green-600 font-medium">
                          {stat.change} {stat.period}
                        </p>
                      </div>
                    </div>
                  </Card>
                </motion.div>
              ))}
            </div>

            {/* Recent Activity - Mobile First */}
            <Card className="p-4 sm:p-6">
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-lg sm:text-xl font-semibold text-gray-900">
                  Recent Activity
                </h2>
                <span className="text-xs text-gray-500">
                  {recentActivity.length} items
                </span>
              </div>

              <div className="space-y-3">
                {recentActivity.slice(0, 5).map((activity, index) => {
                  const ActivityIcon = getActivityIcon(activity.type);
                  const colorClass = getActivityColor(activity.type);

                  return (
                    <motion.div
                      key={activity.id}
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.3, delay: index * 0.05 }}
                      className="flex items-start space-x-3 p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors"
                      onClick={() => handleActivityAction(activity)}
                    >
                      <div
                        className={`p-2 rounded-lg ${colorClass} flex-shrink-0`}
                      >
                        <ActivityIcon className="w-4 h-4" />
                      </div>

                      <div className="flex-1 min-w-0">
                        <div className="flex items-start justify-between">
                          <div className="flex-1 min-w-0">
                            <p className="font-medium text-gray-900 text-sm">
                              {activity.action}{" "}
                              <span className="text-primary-600">
                                {activity.business}
                              </span>
                            </p>

                            <p className="text-xs text-gray-600 mt-1 line-clamp-2">
                              {activity.message}
                            </p>

                            <div className="flex items-center text-xs text-gray-500 mt-2">
                              <Clock className="w-3 h-3 mr-1" />
                              {activity.date}
                              {activity.type === "review" &&
                                activity.rating && (
                                  <div className="flex items-center ml-3">
                                    <Star className="w-3 h-3 text-yellow-400 fill-current mr-1" />
                                    <span>{activity.rating}</span>
                                  </div>
                                )}
                              {getStatusBadge(activity) && (
                                <div className="ml-2">
                                  {getStatusBadge(activity)}
                                </div>
                              )}
                            </div>
                          </div>

                          <button className="ml-2 p-1 text-gray-400 hover:text-gray-600">
                            <ExternalLink className="w-4 h-4" />
                          </button>
                        </div>
                      </div>
                    </motion.div>
                  );
                })}
              </div>

              <div className="mt-4 pt-4 border-t">
                <Button
                  variant="outline"
                  className="w-full"
                  onClick={() => navigate("/profile")}
                  size="sm"
                >
                  View All Activities
                </Button>
              </div>
            </Card>

            {/* Quick Actions - Mobile Priority */}
            <Card className="p-4 sm:p-6">
              <h3 className="font-semibold text-gray-900 mb-4 text-lg">
                Quick Actions
              </h3>
              <div className="grid grid-cols-1 gap-3">
                <Button
                  onClick={() => navigate("/listings")}
                  variant="primary"
                  className="w-full justify-start text-left h-12"
                  icon={MapPin}
                >
                  <div className="flex-1">
                    <div className="text-sm font-medium">Find Businesses</div>
                    <div className="text-xs opacity-90">
                      Discover local services
                    </div>
                  </div>
                </Button>

                <Button
                  onClick={() => navigate("/profile#reviews")}
                  variant="outline"
                  className="w-full justify-start text-left h-12"
                  icon={Star}
                >
                  <div className="flex-1">
                    <div className="text-sm font-medium">Write Review</div>
                    <div className="text-xs text-gray-600">
                      Share your experience
                    </div>
                  </div>
                </Button>

                <div className="grid grid-cols-2 gap-3">
                  <Button
                    onClick={() => navigate("/profile")}
                    variant="outline"
                    className="w-full h-12 flex-col"
                    icon={Users}
                  >
                    <span className="text-xs">Profile</span>
                  </Button>
                  <Button
                    onClick={() => navigate("/contact")}
                    variant="outline"
                    className="w-full h-12 flex-col"
                    icon={MessageCircle}
                  >
                    <span className="text-xs">Support</span>
                  </Button>
                </div>
              </div>
            </Card>

            {/* Customer Insights - Simplified for Mobile */}
            <Card className="p-4 sm:p-6">
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-lg font-semibold text-gray-900">
                  Your Stats
                </h2>
                <Button
                  variant="outline"
                  size="sm"
                  icon={BarChart3}
                  onClick={() => navigate("/profile#analytics")}
                  className="text-xs px-3 py-1"
                >
                  Details
                </Button>
              </div>

              <div className="grid grid-cols-3 gap-4 mb-6">
                <div className="text-center">
                  <p className="text-lg sm:text-xl font-bold text-blue-600">
                    89%
                  </p>
                  <p className="text-xs text-gray-600">Response Rate</p>
                </div>
                <div className="text-center">
                  <p className="text-lg sm:text-xl font-bold text-green-600">
                    4.8
                  </p>
                  <p className="text-xs text-gray-600">Avg Rating</p>
                </div>
                <div className="text-center">
                  <p className="text-lg sm:text-xl font-bold text-purple-600">
                    6
                  </p>
                  <p className="text-xs text-gray-600">This Month</p>
                </div>
              </div>

              <div className="bg-blue-50 rounded-lg p-3">
                <h4 className="font-medium text-blue-900 mb-2 text-sm">
                  Quick Tips
                </h4>
                <ul className="text-xs text-blue-800 space-y-1">
                  <li>• You're an active reviewer with high engagement</li>
                  <li>• Most interested in food & electronics</li>
                  <li>• Your reviews help others decide</li>
                </ul>
              </div>
            </Card>

            {/* Recommendations - Mobile Optimized */}
            <Card className="p-4 sm:p-6">
              <h3 className="font-semibold text-gray-900 mb-4 text-lg">
                For You
              </h3>
              <div className="space-y-3">
                {[
                  {
                    name: "Himalayan Coffee House",
                    category: "Food & Dining",
                    rating: 4.8,
                    reason: "Based on your reviews",
                    image: "/api/placeholder/60/60",
                  },
                  {
                    name: "Tech Repair Solutions",
                    category: "Electronics",
                    rating: 4.6,
                    reason: "Popular in your area",
                    image: "/api/placeholder/60/60",
                  },
                ].map((business, index) => (
                  <div
                    key={index}
                    className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer transition-colors"
                    onClick={() =>
                      navigate(
                        `/business/${business.name
                          .toLowerCase()
                          .replace(/\s+/g, "-")}`
                      )
                    }
                  >
                    <img
                      src={business.image}
                      alt={business.name}
                      className="w-12 h-12 rounded-lg object-cover bg-gray-200"
                    />
                    <div className="flex-1 min-w-0">
                      <h4 className="font-medium text-gray-900 text-sm truncate">
                        {business.name}
                      </h4>
                      <p className="text-xs text-gray-600">
                        {business.category}
                      </p>
                      <div className="flex items-center mt-1">
                        <Star className="w-3 h-3 text-yellow-400 fill-current mr-1" />
                        <span className="text-xs text-gray-600">
                          {business.rating}
                        </span>
                        <span className="text-xs text-blue-600 ml-2">
                          {business.reason}
                        </span>
                      </div>
                    </div>
                    <ExternalLink className="w-4 h-4 text-gray-400" />
                  </div>
                ))}
              </div>
              <Button
                variant="outline"
                className="w-full mt-4"
                onClick={() => navigate("/listings")}
                size="sm"
              >
                Browse All
              </Button>
            </Card>

            {/* Mobile Bottom Padding */}
            <div className="h-6"></div>
          </div>
        </div>
      </div>

      {/* Activity Detail Slide-in Panel - Mobile Optimized */}
      <AnimatePresence>
        {selectedActivity && isActivityModalOpen && (
          <>
            {/* Backdrop */}
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 0.3 }}
              className="fixed inset-0 bg-black bg-opacity-50 z-40"
              onClick={closeActivityModal}
            />
            
            {/* Slide-in Panel */}
            <motion.div
              initial={{ x: "100%" }}
              animate={{ x: 0 }}
              exit={{ x: "100%" }}
              transition={{ 
                type: "tween", 
                duration: 0.3, 
                ease: [0.4, 0.0, 0.2, 1] 
              }}
              className="fixed top-0 right-0 w-full sm:w-96 h-full bg-white z-50 shadow-2xl"
            >
              {(() => {
                const activityData = getDetailedActivityData(selectedActivity);
                const IconComponent = getActivityIcon(selectedActivity.type);

                return (
                  <div className="flex flex-col h-full">
                    {/* Header with close button */}
                    <div className="flex items-center justify-between p-4 border-b bg-gray-50">
                      <h2 className="text-lg font-semibold text-gray-900 truncate">
                        {activityData.title}
                      </h2>
                      <button
                        onClick={closeActivityModal}
                        className="p-2 hover:bg-gray-200 rounded-full transition-colors"
                      >
                        <X className="w-5 h-5 text-gray-500" />
                      </button>
                    </div>

                    {/* Scrollable Content */}
                    <div className="flex-1 overflow-y-auto p-4 space-y-4">
                      {/* Mobile Header */}
                      <div className="flex items-start space-x-3 pb-4 border-b">
                        <div
                          className={`p-2 sm:p-3 rounded-full ${getActivityColor(
                            selectedActivity.type
                          )}`}
                        >
                          <IconComponent className="w-5 h-5 sm:w-6 sm:h-6" />
                        </div>
                        <div className="flex-1 min-w-0">
                          <h3 className="text-base sm:text-lg font-semibold text-gray-900 leading-tight">
                            {activityData.businessName}
                          </h3>
                          <p className="text-sm text-gray-600">
                            {selectedActivity.date}
                          </p>
                          {getStatusBadge(selectedActivity)}
                        </div>
                      </div>

                      {/* Business Image - Mobile Optimized */}
                      <div className="w-full h-32 sm:h-48 bg-gray-200 rounded-lg overflow-hidden">
                        <img
                          src={activityData.businessImage}
                          alt={activityData.businessName}
                          className="w-full h-full object-cover"
                        />
                      </div>

                      {/* Activity-specific content - Mobile First */}
                      {selectedActivity.type === "review" && (
                        <div className="space-y-4">
                          <div className="flex items-center space-x-2">
                            <div className="flex">
                              {[...Array(5)].map((_, i) => (
                                <Star
                                  key={i}
                                  className={`w-4 h-4 ${
                                    i < activityData.details.rating
                                      ? "text-yellow-400 fill-current"
                                      : "text-gray-300"
                                  }`}
                                />
                              ))}
                            </div>
                            <span className="font-medium text-sm">
                              {activityData.details.rating}/5
                            </span>
                          </div>

                          <div className="bg-gray-50 p-3 rounded-lg">
                        <h4 className="font-medium mb-2 text-sm">
                          Your Review
                        </h4>
                        <p className="text-gray-700 text-sm leading-relaxed">
                          {activityData.details.reviewText}
                        </p>
                      </div>

                      <div className="grid grid-cols-2 gap-3 text-xs sm:text-sm">
                        <div className="bg-white p-3 rounded-lg border">
                          <span className="text-gray-600">Order Value:</span>
                          <span className="font-medium ml-1">
                            {activityData.details.orderValue}
                          </span>
                        </div>
                        <div className="bg-white p-3 rounded-lg border">
                          <span className="text-gray-600">Helpful votes:</span>
                          <span className="font-medium ml-1">
                            {activityData.details.helpful}
                          </span>
                        </div>
                      </div>

                      <div className="bg-white p-3 rounded-lg border">
                        <h4 className="font-medium mb-2 text-sm">
                          Order Items
                        </h4>
                        <ul className="text-sm text-gray-600 space-y-1">
                          {activityData.details.orderItems.map((item, i) => (
                            <li key={i} className="flex items-center">
                              <div className="w-1.5 h-1.5 bg-gray-400 rounded-full mr-2"></div>
                              {item}
                            </li>
                          ))}
                        </ul>
                      </div>

                      {activityData.details.businessResponse && (
                        <div className="bg-blue-50 p-3 rounded-lg border border-blue-200">
                          <h4 className="font-medium text-blue-900 mb-2 text-sm">
                            Business Response
                          </h4>
                          <p className="text-blue-800 text-sm leading-relaxed">
                            {activityData.details.businessResponse}
                          </p>
                        </div>
                      )}
                    </div>
                  )}

                  {selectedActivity.type === "save" && (
                    <div className="space-y-4">
                      <div className="grid grid-cols-1 gap-3">
                        <div className="bg-white p-3 rounded-lg border">
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600 text-sm">
                              Category:
                            </span>
                            <span className="font-medium text-sm">
                              {activityData.details.category}
                            </span>
                          </div>
                        </div>
                        <div className="bg-white p-3 rounded-lg border">
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600 text-sm">
                              Rating:
                            </span>
                            <div className="flex items-center">
                              <Star className="w-3 h-3 text-yellow-400 fill-current mr-1" />
                              <span className="font-medium text-sm">
                                {activityData.details.rating}
                              </span>
                              <span className="text-gray-600 text-sm ml-1">
                                ({activityData.details.totalReviews})
                              </span>
                            </div>
                          </div>
                        </div>
                        <div className="bg-white p-3 rounded-lg border">
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600 text-sm">
                              Price Range:
                            </span>
                            <span className="font-medium text-sm">
                              {activityData.details.priceRange}
                            </span>
                          </div>
                        </div>
                      </div>

                      <div className="bg-white p-3 rounded-lg border">
                        <h4 className="font-medium mb-2 text-sm">
                          Specialties
                        </h4>
                        <div className="flex flex-wrap gap-2">
                          {activityData.details.specialties.map(
                            (specialty, i) => (
                              <span
                                key={i}
                                className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full"
                              >
                                {specialty}
                              </span>
                            )
                          )}
                        </div>
                      </div>

                      <div className="bg-green-50 p-3 rounded-lg border border-green-200">
                        <h4 className="font-medium text-green-900 mb-2 text-sm">
                          Why you saved this
                        </h4>
                        <p className="text-green-800 text-sm">
                          {activityData.details.whySaved}
                        </p>
                      </div>
                    </div>
                  )}

                  {selectedActivity.type === "inquiry" && (
                    <div className="space-y-4">
                      <div className="bg-gray-50 p-3 rounded-lg border">
                        <h4 className="font-medium mb-2 text-sm">
                          Your Inquiry
                        </h4>
                        <p className="text-sm text-gray-600 mb-2">
                          <strong>Subject:</strong>{" "}
                          {activityData.details.subject}
                        </p>
                        <p className="text-gray-700 text-sm leading-relaxed">
                          {activityData.details.message}
                        </p>
                      </div>

                      <div className="grid grid-cols-1 gap-3">
                        <div className="bg-white p-3 rounded-lg border">
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600 text-sm">
                              Status:
                            </span>
                            <span
                              className={`font-medium text-sm ${
                                activityData.details.status === "responded"
                                  ? "text-green-600"
                                  : "text-yellow-600"
                              }`}
                            >
                              {activityData.details.status === "responded"
                                ? "Responded"
                                : "Pending"}
                            </span>
                          </div>
                        </div>
                        {activityData.details.responseTime && (
                          <div className="bg-white p-3 rounded-lg border">
                            <div className="flex justify-between items-center">
                              <span className="text-gray-600 text-sm">
                                Response Time:
                              </span>
                              <span className="font-medium text-sm">
                                {activityData.details.responseTime}
                              </span>
                            </div>
                          </div>
                        )}
                      </div>

                      {activityData.details.businessResponse && (
                        <div className="bg-blue-50 p-3 rounded-lg border border-blue-200">
                          <h4 className="font-medium text-blue-900 mb-2 text-sm">
                            Business Response
                          </h4>
                          <p className="text-blue-800 text-sm leading-relaxed">
                            {activityData.details.businessResponse}
                          </p>
                          <div className="mt-2 text-sm text-blue-700">
                            <span>
                              Technician: {activityData.details.technicianName}
                            </span>
                          </div>
                        </div>
                      )}
                    </div>
                  )}

                  {selectedActivity.type === "booking" && (
                    <div className="space-y-4">
                      <div className="bg-green-50 p-3 rounded-lg border border-green-200">
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="font-medium text-green-900 text-sm">
                            Booking Confirmed
                          </h4>
                          <span className="text-xs font-medium text-green-700">
                            ID: {activityData.details.bookingId}
                          </span>
                        </div>
                        <div className="grid grid-cols-1 gap-2 text-sm">
                          <div className="flex justify-between">
                            <span className="text-green-700">
                              Service Date:
                            </span>
                            <span className="font-medium">
                              {activityData.details.serviceDate}
                            </span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-green-700">Time Slot:</span>
                            <span className="font-medium">
                              {activityData.details.timeSlot}
                            </span>
                          </div>
                        </div>
                      </div>

                      <div className="bg-white p-3 rounded-lg border">
                        <h4 className="font-medium mb-2 text-sm">
                          Services Included
                        </h4>
                        <ul className="text-sm text-gray-600 space-y-1">
                          {activityData.details.services.map((service, i) => (
                            <li key={i} className="flex items-center">
                              <CheckCircle className="w-3 h-3 text-green-500 mr-2 flex-shrink-0" />
                              <span>{service}</span>
                            </li>
                          ))}
                        </ul>
                      </div>

                      <div className="bg-gray-50 p-3 rounded-lg border">
                        <div className="flex justify-between items-center">
                          <span className="font-medium text-sm">
                            Total Cost:
                          </span>
                          <span className="text-lg font-bold text-green-600">
                            {activityData.details.totalCost}
                          </span>
                        </div>
                      </div>
                    </div>
                  )}

                  {selectedActivity.type === "view" && (
                    <div className="space-y-4">
                      <div className="grid grid-cols-2 gap-3">
                        <div className="bg-white p-3 rounded-lg border">
                          <div className="text-center">
                            <p className="text-xs text-gray-600">Category</p>
                            <p className="font-medium text-sm">
                              {activityData.details.category}
                            </p>
                          </div>
                        </div>
                        <div className="bg-white p-3 rounded-lg border">
                          <div className="text-center">
                            <p className="text-xs text-gray-600">Duration</p>
                            <p className="font-medium text-sm">
                              {activityData.details.viewDuration}
                            </p>
                          </div>
                        </div>
                      </div>

                      <div className="bg-white p-3 rounded-lg border">
                        <h4 className="font-medium mb-2 text-sm">
                          Pages Viewed
                        </h4>
                        <div className="flex flex-wrap gap-2">
                          {activityData.details.pagesViewed.map((page, i) => (
                            <span
                              key={i}
                              className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full"
                            >
                              {page}
                            </span>
                          ))}
                        </div>
                      </div>

                      {activityData.details.specialOffers && (
                        <div className="bg-yellow-50 p-3 rounded-lg border border-yellow-200">
                          <h4 className="font-medium text-yellow-900 mb-2 text-sm">
                            Special Offer
                          </h4>
                          <p className="text-yellow-800 text-sm">
                            {activityData.details.specialOffers}
                          </p>
                        </div>
                      )}
                    </div>
                  )}

                  {/* Mobile Action Buttons */}
                  <div className="flex space-x-2 pt-4 border-t">
                    <Button
                      variant="primary"
                      className="flex-1 text-sm h-12"
                      onClick={() => {
                        closeActivityModal();
                        navigate(
                          `/business/${activityData.businessName
                            .toLowerCase()
                            .replace(/\s+/g, "-")}`
                        );
                      }}
                    >
                      <ExternalLink className="w-4 h-4 mr-2" />
                      View Business
                    </Button>
                    {selectedActivity.type === "inquiry" ||
                    selectedActivity.type === "booking" ? (
                      <Button
                        variant="outline"
                        className="w-16 h-12"
                        onClick={() => {
                          closeActivityModal();
                          // In a real app, this would open a contact/chat modal
                        }}
                      >
                        <MessageCircle className="w-4 h-4" />
                      </Button>
                    ) : (
                      <Button
                        variant="outline"
                        className="w-16 h-12"
                        onClick={closeActivityModal}
                      >
                        <X className="w-4 h-4" />
                      </Button>
                        )}
                      </div>

                      {/* Fixed Bottom Action Buttons */}
                      <div className="p-4 border-t bg-gray-50">
                        <div className="flex space-x-2">
                          <Button
                            variant="primary"
                            className="flex-1 text-sm h-12"
                            onClick={() => {
                              closeActivityModal();
                              navigate(
                                `/business/${activityData.businessName
                                  .toLowerCase()
                                  .replace(/\s+/g, "-")}`
                              );
                            }}
                          >
                            <ExternalLink className="w-4 h-4 mr-2" />
                            View Business
                          </Button>
                          {selectedActivity.type === "inquiry" ||
                          selectedActivity.type === "booking" ? (
                            <Button
                              variant="outline"
                              className="w-16 h-12"
                              onClick={() => {
                                closeActivityModal();
                                // In a real app, this would open a contact/chat modal
                              }}
                            >
                              <MessageCircle className="w-4 h-4" />
                            </Button>
                          ) : (
                            <Button
                              variant="outline"
                              className="w-16 h-12"
                              onClick={closeActivityModal}
                            >
                              <X className="w-4 h-4" />
                            </Button>
                          )}
                        </div>
                      </div>
                    </div>
                  );
                })()}
              </motion.div>
            </>
          )}
        </AnimatePresence>
      )}
    </>
  );
};

export default CustomerPanel;
